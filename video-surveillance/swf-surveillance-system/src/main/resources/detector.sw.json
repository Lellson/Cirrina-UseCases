{
    "id": "detector",
    "name": "Detector",
    "description": "Workflow",
    "version": "1.0.0",
    "specVersion": "0.8",
    "events": [
        {
            "name": "found-persons",
            "source": "detector",
            "type": "found-persons",
            "kind": "produced"
        }
    ],
    "functions": [
        {
            "name": "service-capture",
            "type": "custom",
            "operation": "rest:post:http://localhost:8001/capture"
        },
        {
            "name": "service-detect",
            "type": "custom",
            "operation": "rest:post:http://localhost:8002/detect"
        }
    ],
    "start": "start",
    "states": [
        {
            "name": "start",
            "type": "inject",
            "data": {
                "cameraImage": null,
                "hasDetectedPersons": false
            },
            "transition": "capture-wait"
        },
        {
            "name": "capture-wait",
            "type": "sleep",
            "duration": "PT0.5S",
            "transition": "capture-invoke"
        },
        {
            "name": "capture-invoke",
            "type": "operation",
            "timeouts": {
                "actionExecTimeout": "PT30S"
            },
            "actions": [
                {
                    "name": "action-capture",
                    "actionDataFilter": {
                        "fromStateData": "${ {} }",
                        "results": "${ .image }",
                        "toStateData": "${ .cameraImage }"
                    },
                    "functionRef": {
                        "refName": "service-capture",
                        "arguments": {
                            "cameraId": "0"
                        },
                        "invoke": "sync"
                    }
                }
            ],
            "transition": "capture-switch"
        },
        {
            "name": "capture-switch",
            "type": "switch",
            "dataConditions": [
                {
                    "name": "case-no-image",
                    "end": true,
                    "condition": "${ .cameraImage == null }"
                }
            ],
            "defaultCondition": {
                "transition": "processing-invoke"
            }
        },
        {
            "name": "processing-invoke",
            "type": "operation",
            "timeouts": {
                "actionExecTimeout": "PT30S"
            },
            "actions": [
                {
                    "name": "action-detect",
                    "actionDataFilter": {
                        "results": "${ .hasDetectedPersons }",
                        "toStateData": "${ .hasDetectedPersons }"
                    },
                    "functionRef": {
                        "refName": "service-detect",
                        "arguments": {
                            "image": "${ .cameraImage }"
                        },
                        "invoke": "sync"
                    }
                }
            ],
            "transition": "processing-switch"
        },
        {
            "name": "processing-switch",
            "type": "switch",
            "dataConditions": [
                {
                    "name": "case-hasDetectedPersons",
                    "transition": {
                        "nextState": "reset",
                        "produceEvents": [
                            {
                                "eventRef": "found-persons",
                                "data": "${ .cameraImage }"
                            }
                        ]
                    },
                    "condition": "${ .hasDetectedPersons == true }"
                }
            ],
            "defaultCondition": {
                "transition": "reset"
            }
        },
        {
            "name": "reset",
            "type": "inject",
            "data": {
                "cameraImage": null,
                "hasDetectedPersons": false
            },
            "transition": "capture-wait"
        }
    ]
}