{
    "id": "robotic_arm",
    "name": "Robotic arm system",
    "description": "Picks up an object, assembles it and returns to its starting position",
    "version": "1.0.0",
    "specVersion": "0.8",
    "start": "config",
    "events": [
        {
            "name": "job-done-robotic-arm",
            "source": "belt",
            "type": "job-done-robotic-arm"
        },
        {
            "name": "do-pick-up",
            "source": "belt",
            "type": "do-pick-up"
        },
        {
            "name": "picked-up",
            "source": "belt",
            "type": "picked-up",
            "kind": "produced"
        },
        {
            "name": "product-complete",
            "source": "job",
            "type": "product-complete",
            "kind": "produced"
        }
    ],
    "functions": [
        {
            "name": "set-job-done",
            "operation": ".jobDone = true | .jobDone",
            "type": "expression"
        },
        {
            "name": "reset-partsAssembled",
            "operation": ".partsAssembled = 0 | .partsAssembled",
            "type": "expression"
        },
        {
            "name": "increment-partsAssembled",
            "operation": ".partsAssembled += 1 | .partsAssembled",
            "type": "expression"
        },
        {
            "name": "service-pick-up",
            "type": "custom",
            "operation": "rest:post:http://localhost:8000/pickUp"
        },
        {
            "name": "service-assemble",
            "type": "custom",
            "operation": "rest:post:http://localhost:8000/assemble"
        },
        {
            "name": "service-return-to-start",
            "type": "custom",
            "operation": "rest:post:http://localhost:8000/returnToStart"
        },
        {
            "name": "service-send-statistics",
            "type": "custom",
            "operation": "rest:post:http://localhost:8000/sendStatistics"
        }
    ],
    "states": [
        {
            "name": "config",
            "type": "inject",
            "data": {
                "partsPerProductDefault": 4
            },
            "stateDataFilter": {
                "output": "{ \"partsPerProduct\": (if .partsPerProduct then .partsPerProduct else .partsPerProductDefault end) }"
            },
            "transition": "starting"
        },
        {
            "name": "starting",
            "type": "inject",
            "data": {
                "jobDone": false,
                "partsAssembled": 0,
                "pickUpSuccess": false,
                "assembleSuccess": false
            },
            "transition": "idle"
        },
        {
            "name": "idle",
            "type": "event",
            "onEvents": [
                {
                    "actions": [
                        {
                            "name": "action-set-job-done",
                            "actionDataFilter": {
                                "toStateData": "${ .jobDone }"
                            },
                            "functionRef": {
                                "refName": "set-job-done"
                            }
                        }
                    ],
                    "eventRefs": [
                        "job-done-robotic-arm"
                    ],
                    "eventDataFilter": {}
                },
                {
                    "actions": [],
                    "eventRefs": [
                        "do-pick-up"
                    ],
                    "eventDataFilter": {}
                }
            ],
            "transition": "continue-switch"
        },
        {
            "name": "continue-switch",
            "type": "switch",
            "dataConditions": [
                {
                    "name": "case-done",
                    "end": true,
                    "condition": "${ .jobDone }"
                }
            ],
            "defaultCondition": {
                "transition": "pick-up"
            }
        },
        {
            "name": "pick-up",
            "type": "operation",
            "actions": [
                {
                    "name": "action-pick-up",
                    "actionDataFilter": {
                        "fromStateData": "${ {} }",
                        "results": "${ .pickUpSuccess }",
                        "toStateData": "${ .pickUpSuccess }"
                    },
                    "functionRef": {
                        "refName": "service-pick-up",
                        "arguments": {},
                        "invoke": "sync"
                    }
                }
            ],
            "transition": "pick-up-switch"
        },
        {
            "name": "pick-up-switch",
            "type": "switch",
            "dataConditions": [
                {
                    "name": "case-done",
                    "transition": {
                        "nextState": "assemble",
                        "produceEvents": [
                            {
                                "eventRef": "picked-up"
                            }
                        ]
                    },
                    "condition": "${ .pickUpSuccess }"
                }
            ],
            "defaultCondition": {
                "transition": "pick-up-error"
            }
        },
        {
            "name": "pick-up-error",
            "type": "sleep",
            "duration": "PT10S",
            "transition": "pick-up"
        },
        {
            "name": "assemble",
            "type": "operation",
            "actions": [
                {
                    "name": "action-assemble",
                    "actionDataFilter": {
                        "fromStateData": "${ {} }",
                        "results": "${ .assembleSuccess }",
                        "toStateData": "${ .assembleSuccess }"
                    },
                    "functionRef": {
                        "refName": "service-assemble",
                        "arguments": {},
                        "invoke": "sync"
                    }
                }
            ],
            "transition": "assemble-switch"
        },
        {
            "name": "assemble-switch",
            "type": "switch",
            "dataConditions": [
                {
                    "name": "case-done",
                    "transition": "assemble-increment",
                    "condition": "${ .assembleSuccess }"
                }
            ],
            "defaultCondition": {
                "transition": "assemble-error"
            }
        },
        {
            "name": "assemble-error",
            "type": "sleep",
            "duration": "PT10S",
            "transition": "assemble"
        },
        {
            "name": "assemble-increment",
            "type": "operation",
            "actions": [
                {
                    "name": "action-increment",
                    "actionDataFilter": {
                        "toStateData": "${ .partsAssembled }"
                    },
                    "functionRef": {
                        "refName": "increment-partsAssembled"
                    }
                },
                {
                    "name": "action-send-statistics",
                    "actionDataFilter": {
                        "useResults": false
                    },
                    "functionRef": {
                        "refName": "service-send-statistics",
                        "arguments": {
                            "productsCompleted": "-1",
                            "totalProducts": "-1",
                            "partsAssembled": "${ .partsAssembled }",
                            "partsPerProduct": "${ .partsPerProduct }"
                        },
                        "invoke": "async"
                    }
                }
            ],
            "transition": "product-complete-switch"
        },
        {
            "name": "product-complete-switch",
            "type": "switch",
            "dataConditions": [
                {
                    "name": "case-product-complete",
                    "transition": "product-complete",
                    "condition": "${ .partsAssembled >= .partsPerProduct }"
                }
            ],
            "defaultCondition": {
                "transition": "return"
            }
        },
        {
            "name": "product-complete",
            "type": "operation",
            "actions": [
                {
                    "name": "action-reset",
                    "actionDataFilter": {
                        "toStateData": "${ .partsAssembled }"
                    },
                    "functionRef": {
                        "refName": "reset-partsAssembled"
                    }
                }
            ],
            "transition": {
                "nextState": "return",
                "produceEvents": [
                    {
                        "eventRef": "product-complete"
                    }
                ]
            }
        },
        {
            "name": "return",
            "type": "operation",
            "actions": [
                {
                    "name": "action-return-to-start",
                    "actionDataFilter": {
                        "fromStateData": "${ {} }",
                        "useResults": false
                    },
                    "functionRef": {
                        "refName": "service-return-to-start",
                        "arguments": {},
                        "invoke": "sync"
                    }
                }
            ],
            "transition": "idle"
        }
    ]
}