{
    "id": "job_control",
    "name": "Job Control System",
    "description": "Controls jobs and handles job progress (Increases a persistent counter for each completed product). Stops a job after a specified amount of products was created.",
    "version": "1.0.0",
    "specVersion": "0.8",
    "events": [
        {
            "name": "product-complete",
            "source": "job",
            "type": "product-complete"
        },
        {
            "name": "job-done-photoelectric-sensor-start",
            "source": "job",
            "type": "job-done-photoelectric-sensor-start",
            "kind": "produced"
        },
        {
            "name": "job-done-photoelectric-sensor-end",
            "source": "job",
            "type": "job-done-photoelectric-sensor-end",
            "kind": "produced"
        },
        {
            "name": "job-done-camera-sensor",
            "source": "job",
            "type": "job-done-camera-sensor",
            "kind": "produced"
        },
        {
            "name": "job-done-conveyor-belt",
            "source": "job",
            "type": "job-done-conveyor-belt",
            "kind": "produced"
        },
        {
            "name": "job-done-robotic-arm",
            "source": "job",
            "type": "job-done-robotic-arm",
            "kind": "produced"
        }
    ],
    "functions": [
        {
            "name": "increment-products-completed",
            "operation": ".productsCompleted += 1 | .productsCompleted",
            "type": "expression"
        },
        {
            "name": "service-send-statistics",
            "type": "custom",
            "operation": "rest:post:http://gros-1.nancy.grid5000.fr:8000/sendStatistics"
        }
    ],
    "start": "config",
    "states": [
        {
            "name": "config",
            "type": "inject",
            "data": {
                "totalProductsDefault": 4
            },
            "stateDataFilter": {
                "output": "{ \"totalProducts\": (if .totalProducts then .totalProducts else .totalProductsDefault end) }"
            },
            "transition": "starting"
        },
        {
            "name": "starting",
            "type": "inject",
            "data": {
                "productsCompleted": 0
            },
            "transition": "running"
        },
        {
            "name": "running",
            "type": "event",
            "onEvents": [
                {
                    "actions": [],
                    "eventRefs": [
                        "product-complete"
                    ],
                    "eventDataFilter": {}
                }
            ],
            "transition": "running-increment"
        },
        {
            "name": "running-increment",
            "type": "operation",
            "actions": [
                {
                    "name": "action-increment",
                    "actionDataFilter": {
                        "toStateData": "${ .productsCompleted }"
                    },
                    "functionRef": {
                        "refName": "increment-products-completed"
                    }
                },
                {
                    "name": "action-send-statistics",
                    "actionDataFilter": {
                        "useResults": false
                    },
                    "functionRef": {
                        "refName": "service-send-statistics",
                        "arguments": {
                            "productsCompleted": "${ .productsCompleted }",
                            "totalProducts": "${ .totalProducts }",
                            "partsAssembled": "-1",
                            "partsPerProduct": "-1"
                        },
                        "invoke": "async"
                    }
                }
            ],
            "transition": "running-switch"
        },
        {
            "name": "running-switch",
            "type": "switch",
            "dataConditions": [
                {
                    "name": "case-done",
                    "transition": "jobDone",
                    "condition": "${ .productsCompleted >= .totalProducts }"
                }
            ],
            "defaultCondition": {
                "transition": "running"
            }
        },
        {
            "name": "jobDone",
            "type": "inject",
            "data": {
                "jobDone": true
            },
            "end": {
                "terminate": true,
                "produceEvents": [
                    {
                        "eventRef": "job-done-photoelectric-sensor-start"
                    },
                    {
                        "eventRef": "job-done-photoelectric-sensor-end"
                    },
                    {
                        "eventRef": "job-done-camera-sensor"
                    },
                    {
                        "eventRef": "job-done-conveyor-belt"
                    },
                    {
                        "eventRef": "job-done-robotic-arm"
                    }
                ]
            }
        }
    ]
}