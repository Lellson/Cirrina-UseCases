{
    "id": "camera_sensor",
    "name": "Camera Sensor System",
    "description": "Takes photos at the start of the conveyor belt and checks if the object is valid",
    "version": "1.0.0",
    "specVersion": "0.8",
    "events": [
        {
            "name": "job-done-camera-sensor",
            "source": "belt",
            "type": "job-done-camera-sensor"
        },
        {
            "name": "start-scan",
            "source": "camera",
            "type": "start-scan"
        },
        {
            "name": "object-valid",
            "source": "camera",
            "type": "object-valid",
            "kind": "produced"
        },
        {
            "name": "object-invalid",
            "source": "camera",
            "type": "object-invalid",
            "kind": "produced"
        }
    ],
    "functions": [
        {
            "name": "set-job-done",
            "operation": ".jobDone = true | .jobDone",
            "type": "expression"
        },
        {
            "name": "service-take-photo",
            "type": "custom",
            "operation": "rest:post:http://gros-1.nancy.grid5000.fr:8000/takePhoto"
        },
        {
            "name": "service-scan-photo",
            "type": "custom",
            "operation": "rest:post:http://gros-1.nancy.grid5000.fr:8000/scanPhoto"
        }
    ],
    "start": "starting",
    "states": [
        {
            "name": "starting",
            "type": "inject",
            "data": {
                "jobDone": false,
                "validObject": false,
                "photoPath": ""
            },
            "transition": "idle"
        },
        {
            "name": "idle",
            "type": "event",
            "onEvents": [
                {
                    "actions": [
                        {
                            "name": "action-set-job-done",
                            "actionDataFilter": {
                                "toStateData": "${ .jobDone }"
                            },
                            "functionRef": {
                                "refName": "set-job-done"
                            }
                        }
                    ],
                    "eventRefs": [
                        "job-done-camera-sensor"
                    ],
                    "eventDataFilter": {}
                },
                {
                    "actions": [
                        {
                            "name": "action-take-photo",
                            "actionDataFilter": {
                                "fromStateData": "${ {} }",
                                "results": "${ .photoPath }",
                                "toStateData": "${ .photoPath }"
                            },
                            "functionRef": {
                                "refName": "service-take-photo",
                                "arguments": {},
                                "invoke": "sync"
                            }
                        },
                        {
                            "name": "action-scan-photo",
                            "actionDataFilter": {
                                "results": "${ .validObject }",
                                "toStateData": "${ .validObject }"
                            },
                            "functionRef": {
                                "refName": "service-scan-photo",
                                "arguments": {
                                    "photoPath": "${ .photoPath }"
                                },
                                "invoke": "sync"
                            }
                        }
                    ],
                    "actionMode": "sequential",
                    "eventRefs": [
                        "start-scan"
                    ],
                    "eventDataFilter": {}
                }
            ],
            "transition": "validObject-or-done-switch"
        },
        {
            "name": "validObject-or-done-switch",
            "type": "switch",
            "dataConditions": [
                {
                    "name": "case-done",
                    "end": true,
                    "condition": "${ .jobDone }"
                },
                {
                    "name": "case-invalidObject",
                    "transition": {
                        "nextState": "idle",
                        "produceEvents": [
                            {
                                "eventRef": "object-invalid"
                            }
                        ]
                    },
                    "condition": "${ .validObject == false }"
                }
            ],
            "defaultCondition": {
                "transition": {
                    "nextState": "idle",
                    "produceEvents": [
                        {
                            "eventRef": "object-valid"
                        }
                    ]
                }
            }
        }
    ]
}